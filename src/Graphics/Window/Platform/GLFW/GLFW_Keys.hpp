#pragma once
#include <Defines.hpp>
#include <Graphics/Event/Keys.hpp>


#include <GLFW/glfw3.h>

namespace Sylver {

    constexpr static Keys GLFWKeysToSylverKeys(u32 key) {
        switch (key) {
            case GLFW_KEY_SPACE:
                return SYLVER_KEY_SPACE;
            case GLFW_KEY_APOSTROPHE:
                return SYLVER_KEY_APOSTROPHE;
            case GLFW_KEY_COMMA:
                return SYLVER_KEY_COMMA;
            case GLFW_KEY_MINUS:
                return SYLVER_KEY_MINUS;
            case GLFW_KEY_PERIOD:
                return SYLVER_KEY_PERIOD;
            case GLFW_KEY_SLASH:
                return SYLVER_KEY_SLASH;
            case GLFW_KEY_0:
                return SYLVER_KEY_0;
            case GLFW_KEY_1:
                return SYLVER_KEY_1;
            case GLFW_KEY_2:
                return SYLVER_KEY_2;
            case GLFW_KEY_3:
                return SYLVER_KEY_3;
            case GLFW_KEY_4:
                return SYLVER_KEY_4;
            case GLFW_KEY_5:
                return SYLVER_KEY_5;
            case GLFW_KEY_6:
                return SYLVER_KEY_6;
            case GLFW_KEY_7:
                return SYLVER_KEY_7;
            case GLFW_KEY_8:
                return SYLVER_KEY_8;
            case GLFW_KEY_9:
                return SYLVER_KEY_9;
            case GLFW_KEY_SEMICOLON:
                return SYLVER_KEY_SEMICOLON;
            case GLFW_KEY_EQUAL:
                return SYLVER_KEY_EQUAL;
            case GLFW_KEY_A:
                return SYLVER_KEY_A;
            case GLFW_KEY_B:
                return SYLVER_KEY_B;
            case GLFW_KEY_C:
                return SYLVER_KEY_C;
            case GLFW_KEY_D:
                return SYLVER_KEY_D;
            case GLFW_KEY_E:
                return SYLVER_KEY_E;
            case GLFW_KEY_F:
                return SYLVER_KEY_F;
            case GLFW_KEY_G:
                return SYLVER_KEY_G;
            case GLFW_KEY_H:
                return SYLVER_KEY_H;
            case GLFW_KEY_I:
                return SYLVER_KEY_I;
            case GLFW_KEY_J:
                return SYLVER_KEY_J;
            case GLFW_KEY_K:
                return SYLVER_KEY_K;
            case GLFW_KEY_L:
                return SYLVER_KEY_L;
            case GLFW_KEY_M:
                return SYLVER_KEY_M;
            case GLFW_KEY_N:
                return SYLVER_KEY_N;
            case GLFW_KEY_O:
                return SYLVER_KEY_O;
            case GLFW_KEY_P:
                return SYLVER_KEY_P;
            case GLFW_KEY_Q:
                return SYLVER_KEY_Q;
            case GLFW_KEY_R:
                return SYLVER_KEY_R;
            case GLFW_KEY_S:
                return SYLVER_KEY_S;
            case GLFW_KEY_T:
                return SYLVER_KEY_T;
            case GLFW_KEY_U:
                return SYLVER_KEY_U;
            case GLFW_KEY_V:
                return SYLVER_KEY_V;
            case GLFW_KEY_W:
                return SYLVER_KEY_W;
            case GLFW_KEY_X:
                return SYLVER_KEY_X;
            case GLFW_KEY_Y:
                return SYLVER_KEY_Y;
            case GLFW_KEY_Z:
                return SYLVER_KEY_Z;
            case GLFW_KEY_LEFT_BRACKET:
                return SYLVER_KEY_LEFT_BRACKET;
            case GLFW_KEY_BACKSLASH:
                return SYLVER_KEY_BACKSLASH;
            case GLFW_KEY_RIGHT_BRACKET:
                return SYLVER_KEY_RIGHT_BRACKET;
            case GLFW_KEY_GRAVE_ACCENT:
                return SYLVER_KEY_GRAVE_ACCENT;
            case GLFW_KEY_WORLD_1:
                return SYLVER_KEY_WORLD_1;
            case GLFW_KEY_WORLD_2:
                return SYLVER_KEY_WORLD_2;
            case GLFW_KEY_ESCAPE:
                return SYLVER_KEY_ESCAPE;
            case GLFW_KEY_ENTER:
                return SYLVER_KEY_ENTER;
            case GLFW_KEY_TAB:
                return SYLVER_KEY_TAB;
            case GLFW_KEY_BACKSPACE:
                return SYLVER_KEY_BACKSPACE;
            case GLFW_KEY_INSERT:
                return SYLVER_KEY_INSERT;
            case GLFW_KEY_DELETE:
                return SYLVER_KEY_DELETE;
            case GLFW_KEY_RIGHT:
                return SYLVER_KEY_RIGHT;
            case GLFW_KEY_LEFT:
                return SYLVER_KEY_LEFT;
            case GLFW_KEY_DOWN:
                return SYLVER_KEY_DOWN;
            case GLFW_KEY_UP:
                return SYLVER_KEY_UP;
            case GLFW_KEY_PAGE_UP:
                return SYLVER_KEY_PAGE_UP;
            case GLFW_KEY_PAGE_DOWN:
                return SYLVER_KEY_PAGE_DOWN;
            case GLFW_KEY_HOME:
                return SYLVER_KEY_HOME;
            case GLFW_KEY_END:
                return SYLVER_KEY_END;
            case GLFW_KEY_CAPS_LOCK:
                return SYLVER_KEY_CAPS_LOCK;
            case GLFW_KEY_SCROLL_LOCK:
                return SYLVER_KEY_SCROLL_LOCK;
            case GLFW_KEY_NUM_LOCK:
                return SYLVER_KEY_NUM_LOCK;
            case GLFW_KEY_PRINT_SCREEN:
                return SYLVER_KEY_PRINT_SCREEN;
            case GLFW_KEY_PAUSE:
                return SYLVER_KEY_PAUSE;
            case GLFW_KEY_F1:
                return SYLVER_KEY_F1;
            case GLFW_KEY_F2:
                return SYLVER_KEY_F2;
            case GLFW_KEY_F3:
                return SYLVER_KEY_F3;
            case GLFW_KEY_F4:
                return SYLVER_KEY_F4;
            case GLFW_KEY_F5:
                return SYLVER_KEY_F5;
            case GLFW_KEY_F6:
                return SYLVER_KEY_F6;
            case GLFW_KEY_F7:
                return SYLVER_KEY_F7;
            case GLFW_KEY_F8:
                return SYLVER_KEY_F8;
            case GLFW_KEY_F9:
                return SYLVER_KEY_F9;
            case GLFW_KEY_F10:
                return SYLVER_KEY_F10;
            case GLFW_KEY_F11:
                return SYLVER_KEY_F11;
            case GLFW_KEY_F12:
                return SYLVER_KEY_F12;
            case GLFW_KEY_F13:
                return SYLVER_KEY_F13;
            case GLFW_KEY_F14:
                return SYLVER_KEY_F14;
            case GLFW_KEY_F15:
                return SYLVER_KEY_F15;
            case GLFW_KEY_F16:
                return SYLVER_KEY_F16;
            case GLFW_KEY_F17:
                return SYLVER_KEY_F17;
            case GLFW_KEY_F18:
                return SYLVER_KEY_F18;
            case GLFW_KEY_F19:
                return SYLVER_KEY_F19;
            case GLFW_KEY_F20:
                return SYLVER_KEY_F20;
            case GLFW_KEY_F21:
                return SYLVER_KEY_F21;
            case GLFW_KEY_F22:
                return SYLVER_KEY_F22;
            case GLFW_KEY_F23:
                return SYLVER_KEY_F23;
            case GLFW_KEY_F24:
                return SYLVER_KEY_F24;
            case GLFW_KEY_F25:
                return SYLVER_KEY_F25;
            case GLFW_KEY_KP_0:
                return SYLVER_KEY_KP_0;
            case GLFW_KEY_KP_1:
                return SYLVER_KEY_KP_1;
            case GLFW_KEY_KP_2:
                return SYLVER_KEY_KP_2;
            case GLFW_KEY_KP_3:
                return SYLVER_KEY_KP_3;
            case GLFW_KEY_KP_4:
                return SYLVER_KEY_KP_4;
            case GLFW_KEY_KP_5:
                return SYLVER_KEY_KP_5;
            case GLFW_KEY_KP_6:
                return SYLVER_KEY_KP_6;
            case GLFW_KEY_KP_7:
                return SYLVER_KEY_KP_7;
            case GLFW_KEY_KP_8:
                return SYLVER_KEY_KP_8;
            case GLFW_KEY_KP_9:
                return SYLVER_KEY_KP_9;
            case GLFW_KEY_KP_DECIMAL:
                return SYLVER_KEY_KP_DECIMAL;
            case GLFW_KEY_KP_DIVIDE:
                return SYLVER_KEY_KP_DIVIDE;
            case GLFW_KEY_KP_MULTIPLY:
                return SYLVER_KEY_KP_MULTIPLY;
            case GLFW_KEY_KP_SUBTRACT:
                return SYLVER_KEY_KP_SUBTRACT;
            case GLFW_KEY_KP_ADD:
                return SYLVER_KEY_KP_ADD;
            case GLFW_KEY_KP_ENTER:
                return SYLVER_KEY_KP_ENTER;
            case GLFW_KEY_KP_EQUAL:
                return SYLVER_KEY_KP_EQUAL;
            case GLFW_KEY_LEFT_SHIFT:
                return SYLVER_KEY_LEFT_SHIFT;
            case GLFW_KEY_LEFT_CONTROL:
                return SYLVER_KEY_LEFT_CONTROL;
            case GLFW_KEY_LEFT_ALT:
                return SYLVER_KEY_LEFT_ALT;
            case GLFW_KEY_LEFT_SUPER:
                return SYLVER_KEY_LEFT_ALT;
            case GLFW_KEY_RIGHT_SHIFT:
                return SYLVER_KEY_RIGHT_SHIFT;
            case GLFW_KEY_RIGHT_CONTROL:
                return SYLVER_KEY_RIGHT_CONTROL;
            case GLFW_KEY_RIGHT_ALT:
                return SYLVER_KEY_RIGHT_ALT;
            case GLFW_KEY_RIGHT_SUPER:
                return SYLVER_KEY_RIGHT_SUPER;
            case GLFW_KEY_MENU:
                return SYLVER_KEY_MENU;
        }
        return SYLVER_KEY_UNKNOWN;
    }
    constexpr static MouseButton GLFWMouseButtonToSylverMouseButton(u32 mouseButton) {
        switch (mouseButton) {
            case GLFW_MOUSE_BUTTON_1:
                return SYLVER_MOUSE_BUTTON_1;
            case GLFW_MOUSE_BUTTON_2:
                return SYLVER_MOUSE_BUTTON_2;
            case GLFW_MOUSE_BUTTON_3:
                return SYLVER_MOUSE_BUTTON_3;
            case GLFW_MOUSE_BUTTON_4:
                return SYLVER_MOUSE_BUTTON_4;
            case GLFW_MOUSE_BUTTON_5:
                return SYLVER_MOUSE_BUTTON_5;
            case GLFW_MOUSE_BUTTON_6:
                return SYLVER_MOUSE_BUTTON_6;
            case GLFW_MOUSE_BUTTON_7:
                return SYLVER_MOUSE_BUTTON_7;
            case GLFW_MOUSE_BUTTON_8:
                return SYLVER_MOUSE_BUTTON_8;
        }
        return SYLVER_MOUSE_BUTTON_1;
    }
    constexpr static ButtonAction GLFWActionToSylverAction(u32 action) {
        switch (action) {
            case GLFW_PRESS:
                return ButtonAction::SYLVER_KEY_PRESS;
            case GLFW_RELEASE:
                return ButtonAction::SYLVER_KEY_RELEASE;
            case GLFW_REPEAT:
                return ButtonAction::SYLVER_KEY_RELEASE;
        }
        return ButtonAction::SYLVER_KEY_PRESS;
    }
}    // namespace Sylver
